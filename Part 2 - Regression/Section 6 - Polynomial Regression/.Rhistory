setwd("E:/Machine-Learning-A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(test_set)
View(training_set)
#regressor  = lm(formula = Profit ~ R.D.Spend + Administraton + Marketing.Spend + State)
regressor  = lm(formula = Profit ~ ., data = training_set)
View(regressor)
regressor
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
# Building the optimal model using Backward Elimination
regressor  = lm(formula = Profit ~ R.D.Spend + Administraton + Marketing.Spend + State, data = dataset)
# Building the optimal model using Backward Elimination
regressor  = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State, data = dataset)
summary(regressor)
regressor  = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend, data = dataset)
summary(regressor)
regressor  = lm(formula = Profit ~ R.D.Spend + Marketing.Spend, data = dataset)
summary(regressor)
regressor  = lm(formula = Profit ~ R.D.Spend, data = dataset)
summary(regressor)
setwd("E:/Machine-Learning-A-Z/Part 2 - Regression/Section 6 - Polynomial Regression")
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
View(dataset)
dataset = dataset[2:3]
View(dataset)
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
lin_reg = lm(formula = Salary ~ ., data = dataset)
View(lin_reg)
summary(lin_reg)
# Fitting Polymonal Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
poly_reg = lm(formula = Salary ~ ., data = dataset)
source('E:/Machine-Learning-A-Z/Part 2 - Regression/Section 6 - Polynomial Regression/polynomial_regression_iqba.R', echo=TRUE)
summary(poly_reg)
install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
colour = 'red') +
grom_line(aes(x = dataset$Level , y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
lin_reg = lm(formula = Salary ~ ., data = dataset)
summary(lin_reg)
# Fitting Polymonal Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
colour = 'red') +
grom_line(aes(x = dataset$Level , y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
colour = 'red') +
grom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
# Predicting a new result with Linear Regression
predict(lin_reg, data.frame(Level = 6.5))
# Predicting a new result with Polynomial Regression
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
